-------------------------------------------------------------------------------
--
-- Title       : sawlut
-- Author      : Mateusz Dyrdół
--
-------------------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.ALL;
ENTITY sawlut_entity IS
  GENERIC(lut_bit_width : integer := 8;
			 DATA_width: integer := 16
  );
  PORT(
    phase_in      : in unsigned(lut_bit_width-1 downto 0);
    a_clk      : in std_logic;
    reset         : in std_logic;
    DATA          : OUT std_logic_vector(15 downto 0)
  );
END sawlut_entity;

architecture behav of sawlut_entity is 
--LUT
type sine_lut is array (0 to (2**lut_bit_width)-1) of integer;
constant sinedata:sine_lut:= (-32000,-31750,-31500,-31250,-31000,-30750,-30500,-30250,-30000,-29750,-29500,-29250,-29000,-28750,-28500,-28250,-28000,-27750,-27500,-27250,-27000,-26750,-26500,-26250,-26000,-25750,-25500,-25250,-25000,-24750,-24500,-24250,-24000,-23750,-23500,-23250,-23000,-22750,-22500,-22250,-22000,-21750,-21500,-21250,-21000,-20750,-20500,-20250,-20000,-19750,-19500,-19250,-19000,-18750,-18500,-18250,-18000,-17750,-17500,-17250,-17000,-16750,-16500,-16250,-16000,-15750,-15500,-15250,-15000,-14750,-14500,-14250,-14000,-13750,-13500,-13250,-13000,-12750,-12500,-12250,-12000,-11750,-11500,-11250,-11000,-10750,-10500,-10250,-10000,-9750,-9500,-9250,-9000,-8750,-8500,-8250,-8000,-7750,-7500,-7250,-7000,-6750,-6500,-6250,-6000,-5750,-5500,-5250,-5000,-4750,-4500,-4250,-4000,-3750,-3500,-3250,-3000,-2750,-2500,-2250,-2000,-1750,-1500,-1250,-1000,-750,-500,-250,0,250,500,750,1000,1250,1500,1750,2000,2250,2500,2750,3000,3250,3500,3750,4000,4250,4500,4750,5000,5250,5500,5750,6000,6250,6500,6750,7000,7250,7500,7750,8000,8250,8500,8750,9000,9250,9500,9750,10000,10250,10500,10750,11000,11250,11500,11750,12000,12250,12500,12750,13000,13250,13500,13750,14000,14250,14500,14750,15000,15250,15500,15750,16000,16250,16500,16750,17000,17250,17500,17750,18000,18250,18500,18750,19000,19250,19500,19750,20000,20250,20500,20750,21000,21250,21500,21750,22000,22250,22500,22750,23000,23250,23500,23750,24000,24250,24500,24750,25000,25250,25500,25750,26000,26250,26500,26750,27000,27250,27500,27750,28000,28250,28500,28750,29000,29250,29500,29750,30000,30250,30500,30750,31000,31250,31500,31750);
signal 	sDATA    : std_logic_vector(15 downto 0);

begin


	process(a_clk,reset)
		variable lutindex : integer range 0 to (2**lut_bit_width)-1 := 0;
	begin
		
		if reset = '0' then
			DATA <= (others => '0');
			lutindex := 0;
		elsif rising_edge(a_clk) then
			lutindex := to_integer(phase_in);
			sDATA <= std_logic_vector(to_signed(sinedata(lutindex), DATA_width));
			DATA <= sDATA; 

		end if;	
	
	end process;

end behav;